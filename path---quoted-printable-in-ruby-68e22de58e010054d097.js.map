{"version":3,"sources":["webpack:///path---quoted-printable-in-ruby-68e22de58e010054d097.js","webpack:///./.cache/json/quoted-printable-in-ruby.json"],"names":["webpackJsonp","423","module","exports","data","markdownRemark","html","fields","post","title","link","timestamp","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,4mCAAsQC,QAA83BC,MAAQC,MAAA,2BAAAC,KAAA,KAAAC,UAAA,oBAAAC,KAAA,mCAAwHC,aAAgBC,KAAA","file":"path---quoted-printable-in-ruby-68e22de58e010054d097.js","sourcesContent":["webpackJsonp([233082276638156],{\n\n/***/ 423:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>I'm working on reading emails sent from ActionMailer, and was noticing the weird form of what I thought was URL-encoding in an HTML section of a multipart email, e.g.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code>&lt;html lang=3D\\\"en\\\">\\n</code></pre>\\n      </div>\\n<p>I also noticed the line length and endings:</p>\\n<blockquote>\\n<p>blah blah … blah bl=<br>\\nah blah blah</p>\\n</blockquote>\\n<p>I shrugged these off as quirks of ActionMailer or SMTP and moved on to removing/decoding them.</p>\\n<p>Two hours later, when googling for info about them because they didn't seem consistent, I stumbled across <a href=\\\"http://en.wikipedia.org/wiki/Quoted-printable\\\">Quoted-printable encoding</a>. I recognized it from the headers in the email, and wondered if someone had written a gem or something to decode it. Then I find <a href=\\\"http://rubydoc.info/stdlib/core/1.8.7/String#unpack-instance_method\\\">this</a> - String#unpack was able to do it for me all along.</p>\\n<p>It's great that Ruby (and sometimes Rails) can do things like this out of the box. I just wish I was smart enough to look.</p>\",\"fields\":{\"post\":{\"title\":\"Quoted-printable in Ruby\",\"link\":null,\"timestamp\":\"2011-02-10T03:31Z\",\"date\":\"February 10, 2011 3:31am UTC\"}}}},\"pathContext\":{\"slug\":\"/quoted-printable-in-ruby\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---quoted-printable-in-ruby-68e22de58e010054d097.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>I'm working on reading emails sent from ActionMailer, and was noticing the weird form of what I thought was URL-encoding in an HTML section of a multipart email, e.g.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code>&lt;html lang=3D\\\"en\\\">\\n</code></pre>\\n      </div>\\n<p>I also noticed the line length and endings:</p>\\n<blockquote>\\n<p>blah blah … blah bl=<br>\\nah blah blah</p>\\n</blockquote>\\n<p>I shrugged these off as quirks of ActionMailer or SMTP and moved on to removing/decoding them.</p>\\n<p>Two hours later, when googling for info about them because they didn't seem consistent, I stumbled across <a href=\\\"http://en.wikipedia.org/wiki/Quoted-printable\\\">Quoted-printable encoding</a>. I recognized it from the headers in the email, and wondered if someone had written a gem or something to decode it. Then I find <a href=\\\"http://rubydoc.info/stdlib/core/1.8.7/String#unpack-instance_method\\\">this</a> - String#unpack was able to do it for me all along.</p>\\n<p>It's great that Ruby (and sometimes Rails) can do things like this out of the box. I just wish I was smart enough to look.</p>\",\"fields\":{\"post\":{\"title\":\"Quoted-printable in Ruby\",\"link\":null,\"timestamp\":\"2011-02-10T03:31Z\",\"date\":\"February 10, 2011 3:31am UTC\"}}}},\"pathContext\":{\"slug\":\"/quoted-printable-in-ruby\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/quoted-printable-in-ruby.json\n// module id = 423\n// module chunks = 233082276638156"],"sourceRoot":""}