{"version":3,"sources":["webpack:///path---nstokenfield-failed-to-query-display-string-for-a-represented-object-html-90e2c25c232f8caa47d2.js","webpack:///./.cache/json/nstokenfield-failed-to-query-display-string-for-a-represented-object-html.json"],"names":["webpackJsonp","420","module","exports","data","markdownRemark","html","fields","post","title","link","publishedAtTimestamp","publishedAt","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,y3BAA0dC,QAAobC,MAAQC,MAAA,uEAAAC,KAAA,KAAAC,qBAAA,KAAAC,YAAA,SAA6IC,aAAgBC,KAAA","file":"path---nstokenfield-failed-to-query-display-string-for-a-represented-object-html-90e2c25c232f8caa47d2.js","sourcesContent":["webpackJsonp([43701896993975],{\n\n/***/ 420:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>I created an <a href=\\\"https://developer.apple.com/library/mac/documentation/cocoa/reference/ApplicationKit/Classes/NSTokenField_Class/Reference/Reference.html\\\">NSTokenField</a> and everything worked great with strings as tokens.\\nWhen I created a representative class to use instead, I ended up with an error message and a blank token field.</p>\\n<pre><code>&#x3C;NSTokenFieldCell: 0x6080003c97e0>: Failed to query display string for a represented object &#x3C;HMCPhotoTag: 0x608000422460>. Ignoring...\\n</code></pre>\\n<p>Turns out, I just set the <a href=\\\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSControl_Class/Reference/Reference.html#//apple_ref/occ/instm/NSControl/objectValue\\\"><code>objectValue</code></a> before I set the delegate.\\nSetting the delegate first meant the token field could transform my objects correctly.</p>\",\"fields\":{\"post\":{\"title\":\"NSTokenField failed to query display string for a represented object\",\"link\":null,\"publishedAtTimestamp\":null,\"publishedAt\":null}}}},\"pathContext\":{\"slug\":\"/nstokenfield-failed-to-query-display-string-for-a-represented-object.html\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---nstokenfield-failed-to-query-display-string-for-a-represented-object-html-90e2c25c232f8caa47d2.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>I created an <a href=\\\"https://developer.apple.com/library/mac/documentation/cocoa/reference/ApplicationKit/Classes/NSTokenField_Class/Reference/Reference.html\\\">NSTokenField</a> and everything worked great with strings as tokens.\\nWhen I created a representative class to use instead, I ended up with an error message and a blank token field.</p>\\n<pre><code>&#x3C;NSTokenFieldCell: 0x6080003c97e0>: Failed to query display string for a represented object &#x3C;HMCPhotoTag: 0x608000422460>. Ignoring...\\n</code></pre>\\n<p>Turns out, I just set the <a href=\\\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSControl_Class/Reference/Reference.html#//apple_ref/occ/instm/NSControl/objectValue\\\"><code>objectValue</code></a> before I set the delegate.\\nSetting the delegate first meant the token field could transform my objects correctly.</p>\",\"fields\":{\"post\":{\"title\":\"NSTokenField failed to query display string for a represented object\",\"link\":null,\"publishedAtTimestamp\":null,\"publishedAt\":null}}}},\"pathContext\":{\"slug\":\"/nstokenfield-failed-to-query-display-string-for-a-represented-object.html\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/nstokenfield-failed-to-query-display-string-for-a-represented-object-html.json\n// module id = 420\n// module chunks = 43701896993975"],"sourceRoot":""}