webpackJsonp([0x78ff5be68ef1],{427:function(t,e){t.exports={data:{markdownRemark:{html:"<p>I've written several tests that have the unfortunate side effect of writing to stdout or stderr, polluting my pretty stream of dots.</p>\n<p>Thanks to a <a href=\"http://benevolentcode.com/2011/03/temporarily-redirect-stdout-in-ruby/\">post on Benevolent Code</a>, I decided to silence them (<a href=\"https://gist.github.com/adamstegman/926853\">gist</a>).</p>\n<pre><code>setup :silence_output\n\n# Redirects stderr and stdout to /dev/null.\ndef silence_output\n  @orig_stderr = $stderr\n  @orig_stdout = $stdout\n\n  # redirect stderr and stdout to /dev/null\n  $stderr = File.new('/dev/null', 'w')\n  $stdout = File.new('/dev/null', 'w')\nend\n\nteardown :enable_output\n\n# Replace stdout and stderr so anything else is output correctly.\ndef enable_output\n  $stderr = @orig_stderr\n  $stdout = @orig_stdout\n  @orig_stderr = nil\n  @orig_stdout = nil\nend\n</code></pre>\n<p>Update:</p>\n<p>The same thing in RSpec (<a href=\"https://gist.github.com/926858\">gist</a>):</p>\n<pre><code>RSpec.configure do |config|\n  config.before(:all, &#x26;:silence_output)\n  config.after(:all, &#x26;:enable_output)\nend\n\n# Redirects stderr and stdout to /dev/null.\ndef silence_output\n  @orig_stderr = $stderr\n  @orig_stdout = $stdout\n\n  # redirect stderr and stdout to /dev/null\n  $stderr = File.new('/dev/null', 'w')\n  $stdout = File.new('/dev/null', 'w')\nend\n\n# Replace stdout and stderr so anything else is output correctly.\ndef enable_output\n  $stderr = @orig_stderr\n  $stdout = @orig_stdout\n  @orig_stderr = nil\n  @orig_stdout = nil\nend\n</code></pre>",fields:{post:{title:"Silence Test::Unit tests",link:null,publishedAtTimestamp:"2011-04-19T04:20Z",publishedAt:"April 19, 2011 4:20am UTC"}}}},pathContext:{slug:"/silence-test-unit-tests.html"}}}});
//# sourceMappingURL=path---silence-test-unit-tests-html-87a33a0a0d9c46c0f2ec.js.map