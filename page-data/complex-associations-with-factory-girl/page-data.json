{"componentChunkName":"component---src-templates-post-js","path":"/complex-associations-with-factory-girl/","result":{"data":{"markdownRemark":{"html":"<p><a href=\"http://github.com/thoughtbot/factory_girl\"><code class=\"language-text\">factory_girl</code></a> is great for DRYing up test code and making tests isolated and maintainable. What it's not so great at is any <a href=\"http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html\">association</a> more complicated than <code class=\"language-text\">has_one</code>/<code class=\"language-text\">belongs_to</code>. I found <a href=\"http://stackoverflow.com/questions/2937326/populating-an-association-with-children-in-factory-girl\">a nice trick on Stack Overflow</a>Â for <code class=\"language-text\">has_many</code> associations.</p>\n<blockquote>\n<p>The Factory.after_ hooks appear to be the only way to do this successfully.</p>\n</blockquote>\n<p>It's a shame, because it makes it really painful to use factories. What used to be a one-line call to create whatever you need becomes writing your own factories that call <code class=\"language-text\">factory_girl</code> factories.</p>","fields":{"post":{"title":"Complex Associations with factory_girl","link":null,"timestamp":"2010-08-18T19:00Z","date":"August 18, 2010 7:00pm UTC"}}}},"pageContext":{"slug":"/complex-associations-with-factory-girl"}},"staticQueryHashes":["2468095761"],"slicesMap":{}}