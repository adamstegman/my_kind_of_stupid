{"componentChunkName":"component---src-templates-post-js","path":"/silence-test-unit-tests/","result":{"data":{"markdownRemark":{"html":"<p>I've written several tests that have the unfortunate side effect of writing to stdout or stderr, polluting my pretty stream of dots.</p>\n<p>Thanks to a <a href=\"http://benevolentcode.com/2011/03/temporarily-redirect-stdout-in-ruby/\">post on Benevolent Code</a>, I decided to silence them (<a href=\"https://gist.github.com/adamstegman/926853\">gist</a>).</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">setup <span class=\"token symbol\">:silence_output</span>\n\n<span class=\"token comment\"># Redirects stderr and stdout to /dev/null.</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">silence_output</span></span>\n  <span class=\"token variable\">@orig_stderr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$stderr</span>\n  <span class=\"token variable\">@orig_stdout</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$stdout</span>\n\n  <span class=\"token comment\"># redirect stderr and stdout to /dev/null</span>\n  <span class=\"token variable\">$stderr</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'/dev/null'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'w'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token variable\">$stdout</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'/dev/null'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'w'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\nteardown <span class=\"token symbol\">:enable_output</span>\n\n<span class=\"token comment\"># Replace stdout and stderr so anything else is output correctly.</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">enable_output</span></span>\n  <span class=\"token variable\">$stderr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@orig_stderr</span>\n  <span class=\"token variable\">$stdout</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@orig_stdout</span>\n  <span class=\"token variable\">@orig_stderr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span>\n  <span class=\"token variable\">@orig_stdout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>Update:</p>\n<p>The same thing in RSpec (<a href=\"https://gist.github.com/926858\">gist</a>):</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">RSpec<span class=\"token punctuation\">.</span>configure <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>config<span class=\"token operator\">|</span>\n  config<span class=\"token punctuation\">.</span>before<span class=\"token punctuation\">(</span><span class=\"token symbol\">:all</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token symbol\">:silence_output</span><span class=\"token punctuation\">)</span>\n  config<span class=\"token punctuation\">.</span>after<span class=\"token punctuation\">(</span><span class=\"token symbol\">:all</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token symbol\">:enable_output</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\"># Redirects stderr and stdout to /dev/null.</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">silence_output</span></span>\n  <span class=\"token variable\">@orig_stderr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$stderr</span>\n  <span class=\"token variable\">@orig_stdout</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$stdout</span>\n\n  <span class=\"token comment\"># redirect stderr and stdout to /dev/null</span>\n  <span class=\"token variable\">$stderr</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'/dev/null'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'w'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token variable\">$stdout</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'/dev/null'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'w'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\"># Replace stdout and stderr so anything else is output correctly.</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">enable_output</span></span>\n  <span class=\"token variable\">$stderr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@orig_stderr</span>\n  <span class=\"token variable\">$stdout</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@orig_stdout</span>\n  <span class=\"token variable\">@orig_stderr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span>\n  <span class=\"token variable\">@orig_stdout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span>\n<span class=\"token keyword\">end</span></code></pre></div>","fields":{"post":{"title":"Silence Test::Unit tests","link":null,"timestamp":"2011-04-19T04:20Z","date":"April 19, 2011 4:20am UTC"}}}},"pageContext":{"slug":"/silence-test-unit-tests"}},"staticQueryHashes":["2468095761"],"slicesMap":{}}