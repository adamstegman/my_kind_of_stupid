{"version":3,"sources":["webpack:///path---implementing-a-mutable-subclass-in-objective-c-ac406ce8904e3dc5ab31.js","webpack:///./.cache/json/implementing-a-mutable-subclass-in-objective-c.json"],"names":["webpackJsonp","416","module","exports","data","markdownRemark","html","fields","post","title","link","timestamp","date","pathContext","slug"],"mappings":"AAAAA,cAAc,eAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,usPAAg6PC,QAAgDC,MAAQC,MAAA,iDAAAC,KAAA,KAAAC,UAAA,oBAAAC,KAAA,iCAA4IC,aAAgBC,KAAA","file":"path---implementing-a-mutable-subclass-in-objective-c-ac406ce8904e3dc5ab31.js","sourcesContent":["webpackJsonp([517291617883],{\n\n/***/ 416:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>I'm writing a class in <a href=\\\"http://adamstegman.com/projects/git-push.html\\\">Git Push</a> to hold and fetch git blobs from\\n<a href=\\\"http://developer.github.com/v3/git/blobs/\\\">Github</a>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code><span class=\\\"token keyword\\\">@interface</span> GHBlob <span class=\\\"token punctuation\\\">:</span> NSObject <span class=\\\"token operator\\\">&lt;</span>NSCopying<span class=\\\"token punctuation\\\">,</span> NSMutableCopying<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token keyword\\\">@property</span> <span class=\\\"token punctuation\\\">(</span>nonatomic<span class=\\\"token punctuation\\\">,</span> copy<span class=\\\"token punctuation\\\">,</span> readonly<span class=\\\"token punctuation\\\">)</span> NSData <span class=\\\"token operator\\\">*</span>content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n\\n<span class=\\\"token keyword\\\">@implementation</span> GHBlob\\n<span class=\\\"token keyword\\\">@synthesize</span> content <span class=\\\"token operator\\\">=</span> _content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n</code></pre>\\n      </div>\\n<p>To support creating and updating blobs, I wrote a mutable subclass initialized\\nin #mutableCopy from <a href=\\\"http://developer.apple.com/library/ios/#documentation/Cocoa/Reference/Foundation/Protocols/NSMutableCopying_Protocol/Reference/Reference.html#//apple_ref/occ/intf/NSMutableCopying\\\">NSMutableCopying</a>. This entailed\\nredefining properties as <code>readwrite</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code><span class=\\\"token keyword\\\">@interface</span> GHMutableBlob <span class=\\\"token punctuation\\\">:</span> GHBlob\\n<span class=\\\"token keyword\\\">@property</span> <span class=\\\"token punctuation\\\">(</span>nonatomic<span class=\\\"token punctuation\\\">,</span> copy<span class=\\\"token punctuation\\\">,</span> readwrite<span class=\\\"token punctuation\\\">)</span> NSData <span class=\\\"token operator\\\">*</span>content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n\\n<span class=\\\"token keyword\\\">@implementation</span> GHMutableBlob\\n<span class=\\\"token keyword\\\">@synthesize</span> content <span class=\\\"token operator\\\">=</span> _content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n</code></pre>\\n      </div>\\n<h3>Problems</h3>\\n<h4>Resynthesizing</h4>\\n<p>As shown above, I also re-synthesized the methods in the subclass. However,\\nthis resulted in the subclass's initializer breaking.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code>GHBlob <span class=\\\"token operator\\\">*</span>newBlob <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>blob mutableCopy<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">STAssertEquals</span><span class=\\\"token punctuation\\\">(</span>newBlob<span class=\\\"token punctuation\\\">.</span>content<span class=\\\"token punctuation\\\">,</span> blob<span class=\\\"token punctuation\\\">.</span>content<span class=\\\"token punctuation\\\">,</span> nil<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">//=> '&lt;00000000>' should be equal to '&lt;10cbb806>'</span>\\n</code></pre>\\n      </div>\\n<p>On review, I noticed something I'd missed before in\\n<a href=\\\"http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ObjectiveC/Chapters/ocProperties.html\\\">Apple's documentation on redeclaring properties</a>. The redeclared\\nproperty isn't synthesized in their example, it's declared <code>@dynamic</code> and the\\nsetter is defined by hand. I scoffed at the inconvenience (isn't this what\\nsynthesizing is supposed to avoid?), but did it anyway.</p>\\n<h4>Unreachable instance variables</h4>\\n<p>Next, the compiler complained that the <code>_content</code> instance variable was\\nunreachable. Oh,\\n<a href=\\\"http://stackoverflow.com/questions/5015130/do-properties-have-to-be-declared-as-instance-variables-in-objective-c#answer-5015657\\\">so <em>this</em> is why we define ivars in the interface</a> - it makes\\nthem available to subclasses.</p>\\n<h3>Summary</h3>\\n<p>So to implement <code>NSMutableCopying</code>, I had to explicitly declare my instance\\nvariables in the interface and explicitly define setter methods in my mutable\\nsubclass. I thought the property/synthesize syntax was\\n<a href=\\\"http://mobile.dzone.com/news/open-letter-apple-please-kill\\\">saving me the trouble</a>, but apparently it's not all rainbows and\\nunicorns.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code><span class=\\\"token keyword\\\">@interface</span> GHBlob <span class=\\\"token punctuation\\\">:</span> NSObject <span class=\\\"token operator\\\">&lt;</span>NSCopying<span class=\\\"token punctuation\\\">,</span> NSMutableCopying<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  NSData <span class=\\\"token operator\\\">*</span>_content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">@property</span> <span class=\\\"token punctuation\\\">(</span>nonatomic<span class=\\\"token punctuation\\\">,</span> copy<span class=\\\"token punctuation\\\">,</span> readonly<span class=\\\"token punctuation\\\">)</span> NSData <span class=\\\"token operator\\\">*</span>content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n\\n<span class=\\\"token keyword\\\">@implementation</span> GHBlob\\n<span class=\\\"token keyword\\\">@synthesize</span> content <span class=\\\"token operator\\\">=</span> _content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n</code></pre>\\n      </div>\\n<p>And in the mutable subclass:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code><span class=\\\"token keyword\\\">@interface</span> GHMutableBlob <span class=\\\"token punctuation\\\">:</span> GHBlob\\n<span class=\\\"token keyword\\\">@property</span> <span class=\\\"token punctuation\\\">(</span>nonatomic<span class=\\\"token punctuation\\\">,</span> copy<span class=\\\"token punctuation\\\">,</span> readwrite<span class=\\\"token punctuation\\\">)</span> NSData <span class=\\\"token operator\\\">*</span>content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n\\n<span class=\\\"token keyword\\\">@implementation</span> GHMutableBlob\\n<span class=\\\"token keyword\\\">@dynamic</span> content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token operator\\\">-</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">)</span>setContent<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">(</span>NSData <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">)</span>content <span class=\\\"token punctuation\\\">{</span>\\n  _content <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>content copy<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"post\":{\"title\":\"Implementing a Mutable Subclass in Objective-C\",\"link\":null,\"timestamp\":\"2012-01-06T06:31Z\",\"date\":\"January 6, 2012 6:31am UTC\"}}}},\"pathContext\":{\"slug\":\"/implementing-a-mutable-subclass-in-objective-c\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---implementing-a-mutable-subclass-in-objective-c-ac406ce8904e3dc5ab31.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>I'm writing a class in <a href=\\\"http://adamstegman.com/projects/git-push.html\\\">Git Push</a> to hold and fetch git blobs from\\n<a href=\\\"http://developer.github.com/v3/git/blobs/\\\">Github</a>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code><span class=\\\"token keyword\\\">@interface</span> GHBlob <span class=\\\"token punctuation\\\">:</span> NSObject <span class=\\\"token operator\\\">&lt;</span>NSCopying<span class=\\\"token punctuation\\\">,</span> NSMutableCopying<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token keyword\\\">@property</span> <span class=\\\"token punctuation\\\">(</span>nonatomic<span class=\\\"token punctuation\\\">,</span> copy<span class=\\\"token punctuation\\\">,</span> readonly<span class=\\\"token punctuation\\\">)</span> NSData <span class=\\\"token operator\\\">*</span>content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n\\n<span class=\\\"token keyword\\\">@implementation</span> GHBlob\\n<span class=\\\"token keyword\\\">@synthesize</span> content <span class=\\\"token operator\\\">=</span> _content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n</code></pre>\\n      </div>\\n<p>To support creating and updating blobs, I wrote a mutable subclass initialized\\nin #mutableCopy from <a href=\\\"http://developer.apple.com/library/ios/#documentation/Cocoa/Reference/Foundation/Protocols/NSMutableCopying_Protocol/Reference/Reference.html#//apple_ref/occ/intf/NSMutableCopying\\\">NSMutableCopying</a>. This entailed\\nredefining properties as <code>readwrite</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code><span class=\\\"token keyword\\\">@interface</span> GHMutableBlob <span class=\\\"token punctuation\\\">:</span> GHBlob\\n<span class=\\\"token keyword\\\">@property</span> <span class=\\\"token punctuation\\\">(</span>nonatomic<span class=\\\"token punctuation\\\">,</span> copy<span class=\\\"token punctuation\\\">,</span> readwrite<span class=\\\"token punctuation\\\">)</span> NSData <span class=\\\"token operator\\\">*</span>content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n\\n<span class=\\\"token keyword\\\">@implementation</span> GHMutableBlob\\n<span class=\\\"token keyword\\\">@synthesize</span> content <span class=\\\"token operator\\\">=</span> _content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n</code></pre>\\n      </div>\\n<h3>Problems</h3>\\n<h4>Resynthesizing</h4>\\n<p>As shown above, I also re-synthesized the methods in the subclass. However,\\nthis resulted in the subclass's initializer breaking.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code>GHBlob <span class=\\\"token operator\\\">*</span>newBlob <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>blob mutableCopy<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">STAssertEquals</span><span class=\\\"token punctuation\\\">(</span>newBlob<span class=\\\"token punctuation\\\">.</span>content<span class=\\\"token punctuation\\\">,</span> blob<span class=\\\"token punctuation\\\">.</span>content<span class=\\\"token punctuation\\\">,</span> nil<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">//=> '&lt;00000000>' should be equal to '&lt;10cbb806>'</span>\\n</code></pre>\\n      </div>\\n<p>On review, I noticed something I'd missed before in\\n<a href=\\\"http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ObjectiveC/Chapters/ocProperties.html\\\">Apple's documentation on redeclaring properties</a>. The redeclared\\nproperty isn't synthesized in their example, it's declared <code>@dynamic</code> and the\\nsetter is defined by hand. I scoffed at the inconvenience (isn't this what\\nsynthesizing is supposed to avoid?), but did it anyway.</p>\\n<h4>Unreachable instance variables</h4>\\n<p>Next, the compiler complained that the <code>_content</code> instance variable was\\nunreachable. Oh,\\n<a href=\\\"http://stackoverflow.com/questions/5015130/do-properties-have-to-be-declared-as-instance-variables-in-objective-c#answer-5015657\\\">so <em>this</em> is why we define ivars in the interface</a> - it makes\\nthem available to subclasses.</p>\\n<h3>Summary</h3>\\n<p>So to implement <code>NSMutableCopying</code>, I had to explicitly declare my instance\\nvariables in the interface and explicitly define setter methods in my mutable\\nsubclass. I thought the property/synthesize syntax was\\n<a href=\\\"http://mobile.dzone.com/news/open-letter-apple-please-kill\\\">saving me the trouble</a>, but apparently it's not all rainbows and\\nunicorns.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code><span class=\\\"token keyword\\\">@interface</span> GHBlob <span class=\\\"token punctuation\\\">:</span> NSObject <span class=\\\"token operator\\\">&lt;</span>NSCopying<span class=\\\"token punctuation\\\">,</span> NSMutableCopying<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  NSData <span class=\\\"token operator\\\">*</span>_content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">@property</span> <span class=\\\"token punctuation\\\">(</span>nonatomic<span class=\\\"token punctuation\\\">,</span> copy<span class=\\\"token punctuation\\\">,</span> readonly<span class=\\\"token punctuation\\\">)</span> NSData <span class=\\\"token operator\\\">*</span>content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n\\n<span class=\\\"token keyword\\\">@implementation</span> GHBlob\\n<span class=\\\"token keyword\\\">@synthesize</span> content <span class=\\\"token operator\\\">=</span> _content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n</code></pre>\\n      </div>\\n<p>And in the mutable subclass:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-objectivec\\\"><code><span class=\\\"token keyword\\\">@interface</span> GHMutableBlob <span class=\\\"token punctuation\\\">:</span> GHBlob\\n<span class=\\\"token keyword\\\">@property</span> <span class=\\\"token punctuation\\\">(</span>nonatomic<span class=\\\"token punctuation\\\">,</span> copy<span class=\\\"token punctuation\\\">,</span> readwrite<span class=\\\"token punctuation\\\">)</span> NSData <span class=\\\"token operator\\\">*</span>content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token keyword\\\">@end</span>\\n\\n<span class=\\\"token keyword\\\">@implementation</span> GHMutableBlob\\n<span class=\\\"token keyword\\\">@dynamic</span> content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token operator\\\">-</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">)</span>setContent<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">(</span>NSData <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">)</span>content <span class=\\\"token punctuation\\\">{</span>\\n  _content <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>content copy<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"post\":{\"title\":\"Implementing a Mutable Subclass in Objective-C\",\"link\":null,\"timestamp\":\"2012-01-06T06:31Z\",\"date\":\"January 6, 2012 6:31am UTC\"}}}},\"pathContext\":{\"slug\":\"/implementing-a-mutable-subclass-in-objective-c\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/implementing-a-mutable-subclass-in-objective-c.json\n// module id = 416\n// module chunks = 517291617883"],"sourceRoot":""}